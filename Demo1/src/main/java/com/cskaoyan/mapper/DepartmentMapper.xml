<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.cskaoyan.bean.Department">
    <id column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <collection column="department_id" javaType="list" property="employeeList"
                select="com.cskaoyan.mapper.EmployeeMapper.selectByDepartmentForOneToMany">
    </collection>
  </resultMap>
  <resultMap id="BaseResultMapForOneToMany" type="com.cskaoyan.bean.Department">
    <id column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    department_id, department_name, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from department
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cskaoyan.bean.Department">
    insert into department (department_id, department_name, note
      )
    values (#{departmentId,jdbcType=VARCHAR}, #{departmentName,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cskaoyan.bean.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.bean.Department">
    update department
    <set>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.bean.Department">
    update department
    set department_name = #{departmentName,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </update>
  <select id="selectCount" resultType="int">
        select count(*) from department
   </select>
  <select id="select" resultMap="BaseResultMap">
        select * from department
   </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from department
    where department_name = #{departmentName,jdbcType=VARCHAR}
  </select>
  <select id="selectOtherByName" parameterType="com.cskaoyan.bean.Department" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from department
    where department_name = #{departmentName,jdbcType=VARCHAR} and department_id != #{departmentId,jdbcType=VARCHAR}
  </select>
  <select id="selectCountById" parameterType="string" resultType="int">
        select count(*) from department where department_id = #{departmentId,jdbcType=VARCHAR}
   </select>
  <select id="selectCountByName" parameterType="string" resultType="int">
        select count(*) from department where department_name like concat('%', #{departmentName,jdbcType=VARCHAR}, '%')
   </select>
  <select id="selectByNames" parameterType="string" resultMap="BaseResultMap">
        select * from department where department_name like concat('%', #{departmentName,jdbcType=VARCHAR}, '%')
   </select>
  <select id="selectByPrimaryKeyForOneToMany" parameterType="java.lang.String" resultMap="BaseResultMapForOneToMany">
    select
    <include refid="Base_Column_List" />
    from department
    where department_id = #{departmentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from department
    <where>
      department_id in
      <foreach collection="departmentIds" item="departmentId" separator="," open="(" close=")" >
        #{departmentId,jdbcType=VARCHAR}
      </foreach>
    </where>
  </delete>
</mapper>