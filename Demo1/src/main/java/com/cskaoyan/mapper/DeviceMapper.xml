<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.DeviceMapper">
  <!--sql和bean的对照 以及查询结果放入的对象-->
  <resultMap id="BaseResultMap" type="com.cskaoyan.bean.Device">
    <id column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="device_type_id" jdbcType="VARCHAR" property="deviceTypeId" />
    <result column="device_status_id" jdbcType="VARCHAR" property="deviceStatusId" />
    <result column="device_status" jdbcType="VARCHAR" property="deviceStatus" />
    <result column="device_purchase_date" jdbcType="TIMESTAMP" property="devicePurchaseDate" />
    <result column="device_purchase_price" jdbcType="DECIMAL" property="devicePurchasePrice" />
    <result column="device_manufacture_date" jdbcType="TIMESTAMP" property="deviceManufactureDate" />
    <result column="device_service_life" jdbcType="TIMESTAMP" property="deviceServiceLife" />
    <result column="device_keeper_id" jdbcType="VARCHAR" property="deviceKeeperId" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <resultMap id="AddResultMap" type="com.cskaoyan.bean.vo.DeviceVO" extends="BaseResultMap">
    <result column="device_type_name" property="deviceTypeName" jdbcType="VARCHAR" />
    <result column="device_keeper" property="deviceKeeper" jdbcType="VARCHAR" />
  </resultMap>

  <!--sql片段1-->
  <sql id="Base_Column_List">
    device_id,
    device_name,
    device_type_id,
    device_status_id,
    device_status,
    device_purchase_date,
    device_purchase_price,
    device_manufacture_date,
    device_service_life,
    device_keeper_id,
    note
  </sql>
  <!--sql片段2 vo里的-->
  <sql id="Base_Column_List2">
    device_type_name, device_keeper
  </sql>
  <!--sql片段3 多表查询-->
  <sql id="Base_Column_List3">
      device_id,
      device_name,
      device.device_type_id,
      device_type_name,
      device_status_id,
      device_purchase_date,
      device_purchase_price,
      device_manufacture_date,
      device_service_life,
      device_keeper_id,
      note,
      emp_name as device_keeper
  </sql>

  <!--查找全部 隐式内连接-->
  <select id="selectAll" parameterType="device" resultMap="AddResultMap">
    select
    <include refid="Base_Column_List3" />
	FROM
	  device,
	  device_type,
	  employee
	WHERE
	  device.device_type_id = device_type.device_type_id
	AND
	  device.device_keeper_id = employee.emp_id
    order by device.device_id ASC
  </select>
  <!--新增一例-->
  <insert id="insert" parameterType="com.cskaoyan.bean.Device">
    insert into device
    (<include refid="Base_Column_List" />)
    values (#{deviceId,jdbcType=VARCHAR}, #{deviceName,jdbcType=VARCHAR}, #{deviceTypeId,jdbcType=VARCHAR},
    #{deviceStatusId,jdbcType=VARCHAR}, #{deviceStatus,jdbcType=VARCHAR}, #{devicePurchaseDate,jdbcType=TIMESTAMP},
    #{devicePurchasePrice,jdbcType=DECIMAL}, #{deviceManufactureDate,jdbcType=TIMESTAMP},
    #{deviceServiceLife,jdbcType=TIMESTAMP}, #{deviceKeeperId,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}
    )
  </insert>
  <!--通过id查-->
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device
    where device_id = #{deviceId,jdbcType=VARCHAR}
  </select>
  <!--编辑-->
  <update id="update" parameterType="com.cskaoyan.bean.Device">
    update device
    set device_name = #{deviceName,jdbcType=VARCHAR},
    device_type_id = #{deviceTypeId,jdbcType=VARCHAR},
    device_status_id = #{deviceStatusId,jdbcType=VARCHAR},
    device_status = #{deviceStatus,jdbcType=VARCHAR},
    device_purchase_date = #{devicePurchaseDate,jdbcType=TIMESTAMP},
    device_purchase_price = #{devicePurchasePrice,jdbcType=DECIMAL},
    device_manufacture_date = #{deviceManufactureDate,jdbcType=TIMESTAMP},
    device_service_life = #{deviceServiceLife,jdbcType=TIMESTAMP},
    device_keeper_id = #{deviceKeeperId,jdbcType=VARCHAR},
    note = #{note,jdbcType=VARCHAR}
    where device_id = #{deviceId,jdbcType=VARCHAR}
  </update>
  <!--批量删除(也可以单删)-->
  <delete id="deleteBatch">
    DELETE
    FROM
    device
    <where>
    device_id IN
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
    </where>
  </delete>
  <!--根据设备id查找设备信息-->
  <select id="searchDeviceByDeviceId" parameterType="device" resultMap="AddResultMap">
    select
    <include refid="Base_Column_List3" />
    FROM
    device,
    device_type,
    employee
    WHERE
    device.device_type_id = device_type.device_type_id
    AND
    device.device_keeper_id = employee.emp_id
    AND
    device_id LIKE CONCAT('%',#{deviceId},'%' )
    order by device.device_id ASC
  </select>

  <!--根据设备名称查找设备信息-->
  <select id="searchDeviceByDeviceName" parameterType="device" resultMap="AddResultMap">
    select
    <include refid="Base_Column_List3" />
    FROM
    device,
    device_type,
    employee
    WHERE
    device.device_type_id = device_type.device_type_id
    AND
    device.device_keeper_id = employee.emp_id
    AND
    device_name LIKE CONCAT('%',#{deviceName},'%' )
    order by device.device_id ASC
  </select>
  <!--根据设备种类名称查找设备信息-->
  <select id="searchDeviceByDeviceTypeName" parameterType="device" resultMap="AddResultMap">
    select
    <include refid="Base_Column_List3" />
    FROM
    device,
    device_type,
    employee
    WHERE
    device.device_type_id = device_type.device_type_id
    AND
    device.device_keeper_id = employee.emp_id
    AND
    device_type_name LIKE CONCAT('%',#{deviceTypeName},'%' )
    order by device.device_id ASC
  </select>
  <!--编辑备注-->
  <update id="updateNote" parameterType="device">
    update device
    set
    note = #{note,jdbcType=VARCHAR}
    where device_id = #{deviceId,jdbcType=VARCHAR}
  </update>

  <!--逆向工程生成的没有用到的方法-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from device
    where device_id = #{deviceId,jdbcType=VARCHAR}
  </delete>

  <insert id="insertSelective" parameterType="com.cskaoyan.bean.Device">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="deviceTypeId != null">
        device_type_id,
      </if>
      <if test="deviceStatusId != null">
        device_status_id,
      </if>
      <if test="deviceStatus != null">
        device_status,
      </if>
      <if test="devicePurchaseDate != null">
        device_purchase_date,
      </if>
      <if test="devicePurchasePrice != null">
        device_purchase_price,
      </if>
      <if test="deviceManufactureDate != null">
        device_manufacture_date,
      </if>
      <if test="deviceServiceLife != null">
        device_service_life,
      </if>
      <if test="deviceKeeperId != null">
        device_keeper_id,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceTypeId != null">
        #{deviceTypeId,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatusId != null">
        #{deviceStatusId,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null">
        #{deviceStatus,jdbcType=VARCHAR},
      </if>
      <if test="devicePurchaseDate != null">
        #{devicePurchaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="devicePurchasePrice != null">
        #{devicePurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="deviceManufactureDate != null">
        #{deviceManufactureDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceServiceLife != null">
        #{deviceServiceLife,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceKeeperId != null">
        #{deviceKeeperId,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.bean.Device">
    update device
    <set>
      <if test="deviceName != null">
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="deviceTypeId != null">
        device_type_id = #{deviceTypeId,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatusId != null">
        device_status_id = #{deviceStatusId,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null">
        device_status = #{deviceStatus,jdbcType=VARCHAR},
      </if>
      <if test="devicePurchaseDate != null">
        device_purchase_date = #{devicePurchaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="devicePurchasePrice != null">
        device_purchase_price = #{devicePurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="deviceManufactureDate != null">
        device_manufacture_date = #{deviceManufactureDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceServiceLife != null">
        device_service_life = #{deviceServiceLife,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceKeeperId != null">
        device_keeper_id = #{deviceKeeperId,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where device_id = #{deviceId,jdbcType=VARCHAR}
  </update>

</mapper>